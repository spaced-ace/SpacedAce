package components

import (
	"fmt"
	"spaced-ace/models/business"
)

templ SingleChoiceQuestion(question *business.SingleChoiceQuestion, allowDeleting, replacePlaceholderWithOOB bool) {
	<div
		id={ fmt.Sprintf(`question-%s`, question.Id) }
		if replacePlaceholderWithOOB {
			hx-swap-oob="outerHTML:#placeholder-question"
		}
		class="flex w-full flex-col items-start gap-y-1 rounded-md border border-gray-300 p-6"
	>
		<div class="flex w-full items-start justify-between gap-x-2">
			<span class="overflow-auto whitespace-normal text-xl font-semibold">{ question.Question }</span>
			if allowDeleting {
				<div
					hx-delete={ fmt.Sprintf(`/questions/%s?type=single-choice&quizId=%s`, question.Id, question.QuizId) }
					hx-target={ fmt.Sprintf(`#question-%s`, question.Id) }
					hx-push-url="false"
					hx-swap="outerHTML"
				>
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
						<path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12"></path>
					</svg>
				</div>
			}
		</div>
		<span class="text-sm text-gray-400">Choose the correct answer from the options below.</span>
		<div class="flex w-full flex-col overflow-auto whitespace-normal rounded-md border border-gray-200 p-2 text-lg gap-y-0.5">
			for index, option := range question.Options {
				<label class="overflow-auto whitespace-normal rounded-md border border-transparent bg-transparent px-2">
					<input
						type="radio"
						name={ question.Id }
						if allowDeleting {
							disabled
						}
						if option.Correct {
							checked
						}
						if index == 0 {
							value="A"
						}
						if index == 1 {
							value="B"
						}
						if index == 2 {
							value="C"
						}
						if index == 3 {
							value="D"
						}
					/>
					{ option.Value }
				</label>
			}
		</div>
	</div>
}

templ MultipleChoiceQuestion(question *business.MultipleChoiceQuestion, allowDeleting, replacePlaceholderWithOOB bool) {
	<div
		id={ fmt.Sprintf(`question-%s`, question.Id) }
		if replacePlaceholderWithOOB {
			hx-swap-oob="outerHTML:#placeholder-question"
		}
		class="flex w-full flex-col items-start gap-y-1 rounded-md border border-gray-300 p-6"
	>
		<div class="flex w-full items-start justify-between gap-x-2">
			<span class="overflow-auto whitespace-normal text-xl font-semibold">{ question.Question }</span>
			if allowDeleting {
				<div
					hx-delete={ fmt.Sprintf(`/questions/%s?type=multiple-choice&quizId=%s`, question.Id, question.QuizId) }
					hx-target={ fmt.Sprintf(`#question-%s`, question.Id) }
					hx-push-url="false"
					hx-swap="outerHTML"
				>
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
						<path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12"></path>
					</svg>
				</div>
			}
		</div>
		<span class="text-sm text-gray-400">Choose the correct answer from the options below.</span>
		<div class="flex w-full flex-col overflow-auto whitespace-normal rounded-md border border-gray-200 p-2 text-lg gap-y-0.5">
			for index, option := range question.Options {
				<label class="overflow-auto whitespace-normal rounded-md border border-transparent bg-transparent px-2">
					<input
						type="checkbox"
						name={ question.Id }
						if allowDeleting {
							disabled
						}
						if option.Correct {
							checked
						}
						if index == 0 {
							value="A"
						}
						if index == 1 {
							value="B"
						}
						if index == 2 {
							value="C"
						}
						if index == 3 {
							value="D"
						}
					/>
					{ option.Value }
				</label>
			}
		</div>
	</div>
}

templ TrueOrFalseQuestion(question *business.TrueOrFalseQuestion, allowDeleting, replacePlaceholderWithOOB bool) {
	<div
		id={ fmt.Sprintf(`question-%s`, question.Id) }
		if replacePlaceholderWithOOB {
			hx-swap-oob="outerHTML:#placeholder-question"
		}
		class="flex w-full flex-col items-start gap-y-1 rounded-md border border-gray-300 p-6"
	>
		<div class="flex w-full items-start justify-between gap-x-2">
			<span class="overflow-auto whitespace-normal text-xl font-semibold">{ question.Question }</span>
			if allowDeleting {
				<div
					hx-delete={ fmt.Sprintf(`/questions/%s?type=true-or-false&quizId=%s`, question.Id, question.QuizId) }
					hx-target={ fmt.Sprintf(`#question-%s`, question.Id) }
					hx-push-url="false"
					hx-swap="outerHTML"
				>
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
						<path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12"></path>
					</svg>
				</div>
			}
		</div>
		<span class="text-sm text-gray-400">Choose the correct answer from the options below.</span>
		<div class="flex w-full flex-col overflow-auto whitespace-normal rounded-md border border-gray-200 p-2 text-lg gap-y-0.5">
			<label class="overflow-auto whitespace-normal rounded-md border border-transparent bg-transparent px-2">
				<input
					type="radio"
					name={ question.Id }
					if allowDeleting {
						disabled
					}
					if question.Answer {
						checked
					}
					value="true"
				/>
				true
			</label>
			<label class="overflow-auto whitespace-normal rounded-md border border-transparent bg-transparent px-2">
				<input
					type="radio"
					name={ question.Id }
					if allowDeleting {
						disabled
					}
					if !question.Answer {
						checked
					}
					value="false"
				/>
				false
			</label>
		</div>
	</div>
}
